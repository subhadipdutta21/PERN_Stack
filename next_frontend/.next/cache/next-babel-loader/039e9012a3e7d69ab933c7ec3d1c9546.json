{"ast":null,"code":"var _jsxFileName = \"D:\\\\PERSONAL PROJECTS\\\\REACT\\\\PERN\\\\next_frontend\\\\Components\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport { EditOutlined, MessageOutlined, SettingOutlined, HeartFilled, PlusOutlined } from '@ant-design/icons';\nimport { Avatar, Card, Skeleton, Input } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { client } from '../apolloGqlClient';\nimport { fetch_posts_query } from '../gqlQueries';\nconst {\n  Meta\n} = Card;\n\nconst PostCard = () => {\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n\n  const commentBox = () => __jsx(Card, {\n    bordered: false,\n    style: {\n      width: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    placeholder: \"Basic usage\",\n    key: Math.random(),\n    suffix: __jsx(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 74\n      }\n    }),\n    style: {\n      marginBottom: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Card content\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Card content\"));\n\n  useEffect(async () => {\n    const resp = await client.query({\n      query: fetch_posts_query,\n      fetchPolicy: 'no-cache',\n      variables: {\n        input: null\n      }\n    });\n    console.log(resp);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    style: {\n      width: 500,\n      marginTop: 16\n    },\n    actions: [__jsx(SettingOutlined, {\n      key: \"setting\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }), __jsx(EditOutlined, {\n      key: \"edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }), __jsx(HeartFilled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }), __jsx(MessageOutlined, {\n      onClick: () => setShow(!show),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, __jsx(Skeleton, {\n    loading: false,\n    avatar: true,\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, __jsx(Meta, {\n    avatar: __jsx(Avatar, {\n      src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 33\n      }\n    }),\n    title: \"Card title\",\n    description: \"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }))), show && commentBox);\n};\n\nexport default PostCard;","map":{"version":3,"sources":["D:/PERSONAL PROJECTS/REACT/PERN/next_frontend/Components/PostCard.js"],"names":["EditOutlined","MessageOutlined","SettingOutlined","HeartFilled","PlusOutlined","Avatar","Card","Skeleton","Input","React","useEffect","useState","client","fetch_posts_query","Meta","PostCard","show","setShow","commentBox","width","Math","random","marginBottom","resp","query","fetchPolicy","variables","input","console","log","marginTop"],"mappings":"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","sourcesContent":["import { EditOutlined, MessageOutlined, SettingOutlined, HeartFilled, PlusOutlined } from '@ant-design/icons';\r\nimport { Avatar, Card, Skeleton, Input } from 'antd';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { client } from '../apolloGqlClient';\r\nimport { fetch_posts_query } from '../gqlQueries';\r\nconst { Meta } = Card;\r\n\r\n\r\n\r\nconst PostCard = () => {\r\n\r\n    const [show, setShow] = useState(false)\r\n\r\n    const commentBox = () => (\r\n        <Card bordered={false} style={{ width: 500 }}>\r\n            <Input placeholder=\"Basic usage\" key={Math.random()} suffix={<PlusOutlined />} style={{ marginBottom: 15 }} />\r\n            <p>Card content</p>\r\n            <p>Card content</p>\r\n        </Card>\r\n    )\r\n\r\n\r\n    useEffect(async () => {\r\n        const resp = await client.query({\r\n            query: fetch_posts_query, fetchPolicy: 'no-cache', variables: {\r\n                input: null\r\n            }\r\n        })\r\n        console.log(resp)\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card\r\n                style={{ width: 500, marginTop: 16 }}\r\n                actions={[\r\n                    <SettingOutlined key=\"setting\" />,\r\n                    <EditOutlined key=\"edit\" />,\r\n                    <HeartFilled />,\r\n                    <MessageOutlined onClick={() => setShow(!show)} />\r\n                ]}\r\n            >\r\n                <Skeleton loading={false} avatar active>\r\n                    <Meta\r\n                        avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                        title=\"Card title\"\r\n                        description=\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. \"\r\n                    />\r\n                </Skeleton>\r\n            </Card>\r\n\r\n            {show && commentBox}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}