{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\PERSONAL PROJECTS\\\\REACT\\\\PERN\\\\next_frontend\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport PostCard from '../Components/PostCard';\n\nvar Home = function Home(_ref) {\n  _s();\n\n  var posts = _ref.posts;\n\n  // const [posts, setPosts] = useState([])\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  return posts.map(function (itm, idx) {\n    return __jsx(PostCard, {\n      key: itm.id,\n      content: itm.body,\n      loading: loading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 29\n      }\n    });\n  });\n};\n\n_s(Home, \"awoWwSKBZAy48DVUNX9vIFbdsbI=\");\n\n_c = Home;\nexport var __N_SSG = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/PERSONAL PROJECTS/REACT/PERN/next_frontend/pages/index.js"],"names":["React","useEffect","useState","PostCard","Home","posts","loading","setLoading","map","itm","idx","id","body"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,QAAP,MAAqB,wBAArB;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAa;AAAA;;AAAA,MAAXC,KAAW,QAAXA,KAAW;;AAExB;AAFwB,kBAGMH,QAAQ,CAAC,IAAD,CAHd;AAAA,MAGjBI,OAHiB;AAAA,MAGRC,UAHQ;;AAKxB,SACEF,KAAK,CAACG,GAAN,CAAU,UAACC,GAAD,EAAMC,GAAN;AAAA,WAAc,MAAC,QAAD;AAAU,MAAA,GAAG,EAAED,GAAG,CAACE,EAAnB;AAAuB,MAAA,OAAO,EAAEF,GAAG,CAACG,IAApC;AAA0C,MAAA,OAAO,EAAEN,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AAAA,GAAV,CADF;AAGD,CARD;;GAAMF,I;;KAAAA,I;;AAgCN,eAAeA,IAAf","sourcesContent":["import { message } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { client } from '../apolloGqlClient';\nimport PostCard from '../Components/PostCard';\nimport { fetch_posts_query } from '../gqlQueries';\n\nconst Home = ({posts}) => {\n\n  // const [posts, setPosts] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  return (\n    posts.map((itm, idx) => <PostCard key={itm.id} content={itm.body} loading={loading} />)\n  );\n}\n\nexport async function getStaticProps() {\n\n  console.log('clled server side')\n\n  try {\n    const resp = await client.query({\n      query: fetch_posts_query, fetchPolicy: 'no-cache', variables: {\n        input: null\n      }\n    })\n    console.log(resp)\n    resp?.data?.fetchPosts ? setPosts(resp?.data?.fetchPosts) : message.error('something went wrong!')\n\n  } catch (error) { console.log(error); message.error('Could not fetch posts') }\n\n  return {\n    props: {\n      posts: resp?.data?.fetchPosts\n    },\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}