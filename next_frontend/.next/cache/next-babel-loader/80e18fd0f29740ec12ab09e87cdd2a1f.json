{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\PERSONAL PROJECTS\\\\REACT\\\\PERN\\\\next_frontend\\\\Components\\\\PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { EditOutlined, HeartFilled, MessageOutlined, PlusOutlined, SettingOutlined } from '@ant-design/icons';\nimport { Avatar, Card, Input, Skeleton, List, message } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { client } from '../apolloGqlClient';\nimport { fetch_comments_query } from '../gqlQueries';\nvar Meta = Card.Meta;\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var content = _ref.content,\n      name = _ref.name,\n      postID = _ref.postID;\n\n  var avatar = __jsx(Avatar, {\n    src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 20\n    }\n  });\n\n  var _useState = useState(false),\n      show = _useState[0],\n      setShow = _useState[1];\n\n  var _useState2 = useState([]),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  useEffect(function () {\n    getComments();\n  }, [postID]);\n\n  var getComments = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _resp$data, _resp$data2, _resp$data3;\n\n      var resp;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.query({\n                query: fetch_comments_query,\n                fetchPolicy: 'no-cache',\n                variables: {\n                  input: {\n                    post_id: postID\n                  }\n                }\n              });\n\n            case 2:\n              resp = _context.sent;\n              console.log(resp === null || resp === void 0 ? void 0 : (_resp$data = resp.data) === null || _resp$data === void 0 ? void 0 : _resp$data.fetchCommentsOnPostID);\n              (resp === null || resp === void 0 ? void 0 : (_resp$data2 = resp.data) === null || _resp$data2 === void 0 ? void 0 : _resp$data2.fetchCommentsOnPostID) ? setComments(resp === null || resp === void 0 ? void 0 : (_resp$data3 = resp.data) === null || _resp$data3 === void 0 ? void 0 : _resp$data3.fetchCommentsOnPostID) : message.error('Something went wrong!');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getComments() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var commentBox = function commentBox() {\n    return __jsx(Card, {\n      bordered: false,\n      style: {\n        width: 500\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, __jsx(Input, {\n      placeholder: \"Basic usage\",\n      key: Math.random(),\n      suffix: __jsx(PlusOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 74\n        }\n      }),\n      style: {\n        marginBottom: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }), __jsx(List, {\n      itemLayout: \"horizontal\",\n      dataSource: data,\n      renderItem: function renderItem(item) {\n        return __jsx(List.Item, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }\n        }, __jsx(List.Item.Meta, {\n          avatar: __jsx(Avatar, {\n            src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 37\n            }\n          }),\n          title: __jsx(\"a\", {\n            href: \"https://ant.design\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 36\n            }\n          }, item.commentator_name),\n          description: item.comment,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    style: {\n      width: 500,\n      marginTop: 16\n    },\n    actions: [__jsx(SettingOutlined, {\n      key: \"setting\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }), __jsx(EditOutlined, {\n      key: \"edit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 56\n      }\n    }), __jsx(HeartFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }), __jsx(MessageOutlined, {\n      onClick: function onClick() {\n        return setShow(!show);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 38\n      }\n    })],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(Skeleton, {\n    loading: false,\n    avatar: true,\n    active: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, __jsx(Meta, {\n    avatar: avatar,\n    title: name,\n    description: content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }))), show && commentBox());\n};\n\n_s(PostCard, \"ocrleVP4L+Sd0pzLFeKFC0dLHTI=\");\n\n_c = PostCard;\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["D:/PERSONAL PROJECTS/REACT/PERN/next_frontend/Components/PostCard.js"],"names":["EditOutlined","HeartFilled","MessageOutlined","PlusOutlined","SettingOutlined","Avatar","Card","Input","Skeleton","List","message","React","useEffect","useState","client","fetch_comments_query","Meta","PostCard","content","name","postID","avatar","show","setShow","comments","setComments","getComments","query","fetchPolicy","variables","input","post_id","resp","console","log","data","fetchCommentsOnPostID","error","commentBox","width","Math","random","marginBottom","item","commentator_name","comment","marginTop"],"mappings":"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","sourcesContent":["import { EditOutlined, HeartFilled, MessageOutlined, PlusOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport { Avatar, Card, Input, Skeleton, List, message } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { client } from '../apolloGqlClient';\r\nimport { fetch_comments_query } from '../gqlQueries';\r\n\r\nconst { Meta } = Card;\r\n\r\n\r\nconst PostCard = ({ content, name, postID }) => {\r\n\r\n    const avatar = <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n\r\n    const [show, setShow] = useState(false)\r\n\r\n    const [comments, setComments] = useState([])\r\n\r\n    useEffect(() => {\r\n        getComments()\r\n    }, [postID])\r\n\r\n    const getComments = async () => {\r\n        let resp = await client.query({\r\n            query: fetch_comments_query, fetchPolicy: 'no-cache', variables: {\r\n                input: {\r\n                    post_id: postID\r\n                }\r\n            }\r\n        })\r\n\r\n        console.log(resp?.data?.fetchCommentsOnPostID)\r\n        resp?.data?.fetchCommentsOnPostID ? setComments(resp?.data?.fetchCommentsOnPostID) : message.error('Something went wrong!')\r\n    }\r\n\r\n    const commentBox = () => (\r\n        <Card bordered={false} style={{ width: 500 }}>\r\n            <Input placeholder=\"Basic usage\" key={Math.random()} suffix={<PlusOutlined />} style={{ marginBottom: 15 }} />\r\n            <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={data}\r\n                renderItem={item => (\r\n                    <List.Item>\r\n                        <List.Item.Meta\r\n                            avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                            title={<a href=\"https://ant.design\">{item.commentator_name}</a>}\r\n                            description={item.comment}\r\n                        />\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </Card>\r\n    )\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card\r\n                style={{ width: 500, marginTop: 16 }}\r\n                actions={[\r\n                    <SettingOutlined key=\"setting\" />, <EditOutlined key=\"edit\" />,\r\n                    <HeartFilled />, <MessageOutlined onClick={() => setShow(!show)} />\r\n                ]}\r\n            >\r\n                <Skeleton loading={false} avatar active>\r\n                    <Meta avatar={avatar} title={name} description={content} />\r\n                </Skeleton>\r\n            </Card>\r\n\r\n            {show && commentBox()}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}