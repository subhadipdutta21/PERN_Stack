{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\PERSONAL PROJECTS\\\\REACT\\\\PERN\\\\next_frontend\\\\Components\\\\PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query fetchPosts($input:FetchPostInput) {\\n     fetchPosts(input: $input){  id\\n       body\\n       user_id\\n       # likes{\\n       #   liker_name\\n       #   liker_id\\n       #   liker_email\\n       # }\\n       # comments{\\n       #   comment\\n       #   is_deleted\\n       #   commentator_name\\n       # }\\n       }\\n   }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { EditOutlined, MessageOutlined, SettingOutlined, HeartFilled, PlusOutlined } from '@ant-design/icons';\nimport { Avatar, Card, Skeleton, Input } from 'antd';\nimport { gql } from '@apollo/client';\nimport React, { useEffect, useState } from 'react';\nimport { client } from '../apolloGqlClient';\nvar Meta = Card.Meta;\n\nvar PostCard = function PostCard() {\n  _s();\n\n  var _useState = useState(false),\n      show = _useState[0],\n      setShow = _useState[1];\n\n  var commentBox = function commentBox() {\n    return __jsx(Card, {\n      bordered: false,\n      style: {\n        width: 500\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, __jsx(Input, {\n      placeholder: \"Basic usage\",\n      key: Math.random(),\n      suffix: __jsx(PlusOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 74\n        }\n      }),\n      style: {\n        marginBottom: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, \"Card content\"), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, \"Card content\"));\n  };\n\n  var data = gql(_templateObject());\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var resp;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return client.query({\n              query: data,\n              fetchPolicy: 'no-cache',\n              variables: {\n                input: null\n              }\n            });\n\n          case 2:\n            resp = _context.sent;\n            console.log(resp);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    style: {\n      width: 500,\n      marginTop: 16\n    },\n    actions: [__jsx(SettingOutlined, {\n      key: \"setting\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }), __jsx(EditOutlined, {\n      key: \"edit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }), __jsx(HeartFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }), __jsx(MessageOutlined, {\n      onClick: function onClick() {\n        return setShow(!show);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    })],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, __jsx(Skeleton, {\n    loading: false,\n    avatar: true,\n    active: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, __jsx(Meta, {\n    avatar: __jsx(Avatar, {\n      src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }),\n    title: \"Card title\",\n    description: \"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }))), show && commentBox);\n};\n\n_s(PostCard, \"bXBd/WbmO9A8Q7bxaOKZvuJyGc0=\");\n\n_c = PostCard;\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["D:/PERSONAL PROJECTS/REACT/PERN/next_frontend/Components/PostCard.js"],"names":["EditOutlined","MessageOutlined","SettingOutlined","HeartFilled","PlusOutlined","Avatar","Card","Skeleton","Input","gql","React","useEffect","useState","client","Meta","PostCard","show","setShow","commentBox","width","Math","random","marginBottom","data","query","fetchPolicy","variables","input","resp","console","log","marginTop"],"mappings":"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","sourcesContent":["import { EditOutlined, MessageOutlined, SettingOutlined, HeartFilled, PlusOutlined } from '@ant-design/icons';\r\nimport { Avatar, Card, Skeleton, Input } from 'antd';\r\nimport { gql } from '@apollo/client';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { client } from '../apolloGqlClient';\r\nconst { Meta } = Card;\r\n\r\n\r\n\r\nconst PostCard = () => {\r\n\r\n    const [show, setShow] = useState(false)\r\n\r\n    const commentBox = () => (\r\n        <Card bordered={false} style={{ width: 500 }}>\r\n            <Input placeholder=\"Basic usage\" key={Math.random()} suffix={<PlusOutlined />} style={{ marginBottom: 15 }} />\r\n            <p>Card content</p>\r\n            <p>Card content</p>\r\n        </Card>\r\n    )\r\n\r\n    let data = gql`\r\n    query fetchPosts($input:FetchPostInput) {\r\n     fetchPosts(input: $input){  id\r\n       body\r\n       user_id\r\n       # likes{\r\n       #   liker_name\r\n       #   liker_id\r\n       #   liker_email\r\n       # }\r\n       # comments{\r\n       #   comment\r\n       #   is_deleted\r\n       #   commentator_name\r\n       # }\r\n       }\r\n   }`\r\n\r\n\r\n    useEffect(async () => {\r\n        const resp = await client.query({\r\n            query: data, fetchPolicy: 'no-cache', variables: {\r\n                input: null\r\n            }\r\n        })\r\n        console.log(resp)\r\n\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Card\r\n                style={{ width: 500, marginTop: 16 }}\r\n                actions={[\r\n                    <SettingOutlined key=\"setting\" />,\r\n                    <EditOutlined key=\"edit\" />,\r\n                    <HeartFilled />,\r\n                    <MessageOutlined onClick={() => setShow(!show)} />\r\n                ]}\r\n            >\r\n                <Skeleton loading={false} avatar active>\r\n                    <Meta\r\n                        avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                        title=\"Card title\"\r\n                        description=\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. \"\r\n                    />\r\n                </Skeleton>\r\n            </Card>\r\n\r\n            {show && commentBox}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}